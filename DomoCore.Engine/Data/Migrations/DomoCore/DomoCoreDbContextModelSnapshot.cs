// <auto-generated />
using System;
using DomoCore.Engine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DomoCore.Engine.Data.Migrations.DomoCore
{
    [DbContext(typeof(DomoCoreDbContext))]
    partial class DomoCoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("DomoCore.Engine.Models.FollowerOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InputId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OutputId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InputId");

                    b.HasIndex("OutputId");

                    b.ToTable("FollowerOutputs");
                });

            modelBuilder.Entity("DomoCore.Engine.Models.Input", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HWValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Inputs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HWValue = 1,
                            State = "Released"
                        },
                        new
                        {
                            Id = 2,
                            HWValue = 2,
                            State = "Released"
                        });
                });

            modelBuilder.Entity("DomoCore.Engine.Models.Output", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HWValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Outputs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HWValue = 1,
                            Name = "Licht 1",
                            State = "Off"
                        },
                        new
                        {
                            Id = 2,
                            HWValue = 2,
                            Name = "Licht 2",
                            State = "Off"
                        });
                });

            modelBuilder.Entity("DomoCore.Engine.Models.SensorControlledOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoOff")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutoOffTimeSecs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Counter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InputId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OutputId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InputId");

                    b.HasIndex("OutputId");

                    b.ToTable("SensorControlledOutputs");
                });

            modelBuilder.Entity("DomoCore.Engine.Models.ShutterOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Counter")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DirectionOutputId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InputId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PowerOutputId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RunTimeSecs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DirectionOutputId");

                    b.HasIndex("InputId");

                    b.HasIndex("PowerOutputId");

                    b.ToTable("ShutterOutputs");
                });

            modelBuilder.Entity("DomoCore.Engine.Models.SimpleOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoOff")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutoOffTimeSecs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InputId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OutputId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InputId");

                    b.HasIndex("OutputId");

                    b.ToTable("SimpleOutputs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutoOff = false,
                            AutoOffTimeSecs = 0,
                            InputId = 2,
                            Name = "Licht 1",
                            OutputId = 1,
                            State = "Off"
                        },
                        new
                        {
                            Id = 2,
                            AutoOff = false,
                            AutoOffTimeSecs = 0,
                            InputId = 1,
                            Name = "Licht 2",
                            OutputId = 2,
                            State = "Off"
                        });
                });

            modelBuilder.Entity("DomoCore.Engine.Models.SwitchTime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Minute")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Second")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShutterOutputId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShutterOutputdId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SimpleOutputId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SwitchOn")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ShutterOutputId");

                    b.HasIndex("SimpleOutputId");

                    b.ToTable("SwitchTimes");
                });

            modelBuilder.Entity("DomoCore.Engine.Models.FollowerOutput", b =>
                {
                    b.HasOne("DomoCore.Engine.Models.Input", "Input")
                        .WithMany()
                        .HasForeignKey("InputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomoCore.Engine.Models.Output", "Output")
                        .WithMany()
                        .HasForeignKey("OutputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomoCore.Engine.Models.SensorControlledOutput", b =>
                {
                    b.HasOne("DomoCore.Engine.Models.Input", "Input")
                        .WithMany()
                        .HasForeignKey("InputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomoCore.Engine.Models.Output", "Output")
                        .WithMany()
                        .HasForeignKey("OutputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomoCore.Engine.Models.ShutterOutput", b =>
                {
                    b.HasOne("DomoCore.Engine.Models.Output", "DirectionOutput")
                        .WithMany()
                        .HasForeignKey("DirectionOutputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomoCore.Engine.Models.Input", "Input")
                        .WithMany()
                        .HasForeignKey("InputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomoCore.Engine.Models.Output", "PowerOutput")
                        .WithMany()
                        .HasForeignKey("PowerOutputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomoCore.Engine.Models.SimpleOutput", b =>
                {
                    b.HasOne("DomoCore.Engine.Models.Input", "Input")
                        .WithMany()
                        .HasForeignKey("InputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomoCore.Engine.Models.Output", "Output")
                        .WithMany()
                        .HasForeignKey("OutputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomoCore.Engine.Models.SwitchTime", b =>
                {
                    b.HasOne("DomoCore.Engine.Models.ShutterOutput", "ShutterOutput")
                        .WithMany("SwitchTimes")
                        .HasForeignKey("ShutterOutputId");

                    b.HasOne("DomoCore.Engine.Models.SimpleOutput", "SimpleOutput")
                        .WithMany("SwitchTimes")
                        .HasForeignKey("SimpleOutputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
